;set _root_.scala.collection.Seq(historyPath := None,shellPrompt := { _ => "" },SettingKey[_root_.scala.Option[_root_.sbt.File]]("sbtStructureOutputFile") in _root_.sbt.Global := _root_.scala.Some(_root_.sbt.file("/tmp/sbt-structure.xml")),SettingKey[_root_.java.lang.String]("sbtStructureOptions") in _root_.sbt.Global := "download, resolveClassifiers, resolveSbtClassifiers");apply -cp "/home/abbass/.IdeaIC2019.1/config/plugins/Scala/repo/org.jetbrains/sbt-structure-extractor/scala_2.12/sbt_1.0/2018.2.1+4-88400d3f/jars/sbt-structure-extractor.jar" org.jetbrains.sbt.CreateTasks;*/*:dumpStructure
clean compile
clean
compile
runMain fr.marouni.bigdata.io.spark.Driver
reload
runMain fr.marouni.bigdata.io.spark.Driver
clean
runMain fr.marouni.bigdata.io.spark.Driver
clean
runMain fr.marouni.bigdata.io.spark.Driver
clean
runMain fr.marouni.bigdata.io.spark.Driver
;set _root_.scala.collection.Seq(historyPath := None,shellPrompt := { _ => "" },SettingKey[_root_.scala.Option[_root_.sbt.File]]("sbtStructureOutputFile") in _root_.sbt.Global := _root_.scala.Some(_root_.sbt.file("/tmp/sbt-structure.xml")),SettingKey[_root_.java.lang.String]("sbtStructureOptions") in _root_.sbt.Global := "download, resolveClassifiers, resolveSbtClassifiers");apply -cp "/home/abbass/.IdeaIC2019.1/config/plugins/Scala/repo/org.jetbrains/sbt-structure-extractor/scala_2.12/sbt_1.0/2018.2.1+4-88400d3f/jars/sbt-structure-extractor.jar" org.jetbrains.sbt.CreateTasks;*/*:dumpStructure
clean
runMain fr.marouni.bigdata.io.spark.Driver
clean
;set _root_.scala.collection.Seq(historyPath := None,shellPrompt := { _ => "" },SettingKey[_root_.scala.Option[_root_.sbt.File]]("sbtStructureOutputFile") in _root_.sbt.Global := _root_.scala.Some(_root_.sbt.file("/tmp/sbt-structure.xml")),SettingKey[_root_.java.lang.String]("sbtStructureOptions") in _root_.sbt.Global := "download, resolveClassifiers, resolveSbtClassifiers");apply -cp "/home/abbass/.IdeaIC2019.1/config/plugins/Scala/repo/org.jetbrains/sbt-structure-extractor/scala_2.12/sbt_1.0/2018.2.1+4-88400d3f/jars/sbt-structure-extractor.jar" org.jetbrains.sbt.CreateTasks;*/*:dumpStructure
clean
runMain fr.marouni.bigdata.io.spark.sources.SourceDriver
;set _root_.scala.collection.Seq(historyPath := None,shellPrompt := { _ => "" },SettingKey[_root_.scala.Option[_root_.sbt.File]]("sbtStructureOutputFile") in _root_.sbt.Global := _root_.scala.Some(_root_.sbt.file("/tmp/sbt-structure.xml")),SettingKey[_root_.java.lang.String]("sbtStructureOptions") in _root_.sbt.Global := "download, resolveClassifiers, resolveSbtClassifiers");apply -cp "/home/abbass/.IdeaIC2019.1/config/plugins/Scala/repo/org.jetbrains/sbt-structure-extractor/scala_2.12/sbt_1.0/2018.2.1+4-88400d3f/jars/sbt-structure-extractor.jar" org.jetbrains.sbt.CreateTasks;*/*:dumpStructure
clean
runMain fr.marouni.bigdata.io.beam.wordcount.Driver
clean
runMain fr.marouni.bigdata.io.spark.sources.SparkDataSourceDriver
clean
runMain fr.marouni.bigdata.io.spark.sources.SparkDataSourceDriver
clean
reload
runMain fr.marouni.bigdata.io.spark.sources.SparkDataSourceDriver
clean 
runMain fr.marouni.bigdata.io.beam.wordcount.BeamWordCountDriver --runner=direct
runMain fr.marouni.bigdata.io.beam.wordcount.BeamWordCountDriver --runner=dataflow --tempLocation=gs://datahubhouse/temp/staging
clean
runMain fr.marouni.bigdata.io.scio.wordcount.ScioWordCountDriver --runner=direct
clean
runMain fr.marouni.bigdata.io.scio.wordcount.ScioWordCountDriver --runner=direct
runMain fr.marouni.bigdata.io.scio.wordcount.ScioWordCountDriver --runner=spark
clean
reload
compile
clean
runMain fr.marouni.bigdata.io.scio.bigquery.BQDriver --runner=direct
clean 
compile
clean 
compile
runMain fr.marouni.bigdata.io.scio.bigquery.BQDriver --runner=direct
runMain fr.marouni.bigdata.io.scio.bigquery.BQDriver --runner=direct --tempLocation=gs://datahubhouse/temp
clean
runMain fr.marouni.bigdata.io.scio.bigquery.BQDriver --runner=direct --tempLocation=gs://datahubhouse/temp
clean
runMain fr.marouni.bigdata.io.scio.bigquery.BQDriver --runner=direct --tempLocation=gs://datahubhouse/temp
clean
runMain fr.marouni.bigdata.io.scio.bigquery.BQDriver --runner=direct --tempLocation=gs://datahubhouse/temp
clean
compile
runMain fr.marouni.bigdata.io.scio.bigquery.BQDriver --runner=direct --tempLocation=gs://datahubhouse/temp
clean
runMain fr.marouni.bigdata.io.scio.bigquery.BQDriver --runner=direct --tempLocation=gs://datahubhouse/temp
clean
runMain fr.marouni.bigdata.io.scio.bigquery.BQDriver --runner=direct --tempLocation=gs://datahubhouse/temp
runMain fr.marouni.bigdata.io.scio.bigquery.BQDriver --runner=direct --tempLocation=gs://datahubhouse/temp -Doverride.type.provider=fr.marouni.bigdata.io.scio.bigquery.MyOverrideTypeProvider
clean
runMain fr.marouni.bigdata.io.scio.bigquery.BQDriver --runner=direct --tempLocation=gs://datahubhouse/temp -Doverride.type.provider=fr.marouni.bigdata.io.scio.bigquery.MyOverrideTypeProvider
clean
runMain fr.marouni.bigdata.io.scio.bigquery.BQDriver --runner=direct --tempLocation=gs://datahubhouse/temp
clean
runMain fr.marouni.bigdata.io.beam.bigquery.BigQueryDriver --runner=direct --tempLocation=gs://datahubhouse/temp
clean
runMain fr.marouni.bigdata.io.beam.bigquery.BigQueryDriver --runner=direct --tempLocation=gs://datahubhouse/temp
clean
compile
clean
compile
clean
compile
clean
compile
clean
compile
clean
compile
clean
compile
clean
compile
clean
compile
clean
compile
reload
compile
clean
compile
reload
compile
runMain fr.marouni.bigdata.io.beam.sources.IODriver --runner=direct
runMain fr.marouni.bigdata.io.beam.sources.IODriver --runner=spark
reload
runMain fr.marouni.bigdata.io.beam.sources.IODriver --runner=spark
runMain fr.marouni.bigdata.io.beam.sources.IODriver --runner=spark --master=local[1]
runMain fr.marouni.bigdata.io.beam.sources.IODriver --runner=spark --sparkMaster=local[1]
clean
compile
runMain fr.marouni.bigdata.io.scio.sources.ScioIODriver --runner=spark --sparkMaster=local[1]
;set _root_.scala.collection.Seq(historyPath := None,shellPrompt := { _ => "" },SettingKey[_root_.scala.Option[_root_.sbt.File]]("sbtStructureOutputFile") in _root_.sbt.Global := _root_.scala.Some(_root_.sbt.file("/tmp/sbt-structure.xml")),SettingKey[_root_.java.lang.String]("sbtStructureOptions") in _root_.sbt.Global := "download, resolveClassifiers, resolveSbtClassifiers");apply -cp "/home/abbass/.IdeaIC2019.1/config/plugins/Scala/repo/org.jetbrains/sbt-structure-extractor/scala_2.12/sbt_1.0/2018.2.1+4-88400d3f/jars/sbt-structure-extractor.jar" org.jetbrains.sbt.CreateTasks;*/*:dumpStructure
clean
runMain fr.marouni.bigdata.io.scio.sources.ScioIODriver --runner=spark --sparkMaster=local[1]
clean
compile
runMain fr.marouni.bigdata.io.scio.sources.ScioIODriver --runner=spark --sparkMaster=local[1]
;set _root_.scala.collection.Seq(historyPath := None,shellPrompt := { _ => "" },SettingKey[_root_.scala.Option[_root_.sbt.File]]("sbtStructureOutputFile") in _root_.sbt.Global := _root_.scala.Some(_root_.sbt.file("/tmp/sbt-structure.xml")),SettingKey[_root_.java.lang.String]("sbtStructureOptions") in _root_.sbt.Global := "download, resolveClassifiers, resolveSbtClassifiers");apply -cp "/home/abbass/.IdeaIC2019.1/config/plugins/Scala/repo/org.jetbrains/sbt-structure-extractor/scala_2.12/sbt_1.0/2018.2.1+4-88400d3f/jars/sbt-structure-extractor.jar" org.jetbrains.sbt.CreateTasks;*/*:dumpStructure
clean
runMain fr.marouni.bigdata.io.scio.avro.AvroDriver --runner=spark --sparkMaster=local[1]
runMain fr.marouni.bigdata.io.scio.avro.AvroDriver --runner=direct
runMain fr.marouni.bigdata.io.scio.avro.AvroDriver --runner=spark --sparkMaster=local[1]
clean
runMain fr.marouni.bigdata.io.scio.avro.AvroDriver --runner=spark --sparkMaster=local[1]
;set _root_.scala.collection.Seq(historyPath := None,shellPrompt := { _ => "" },SettingKey[_root_.scala.Option[_root_.sbt.File]]("sbtStructureOutputFile") in _root_.sbt.Global := _root_.scala.Some(_root_.sbt.file("/tmp/sbt-structure.xml")),SettingKey[_root_.java.lang.String]("sbtStructureOptions") in _root_.sbt.Global := "download, resolveClassifiers, resolveSbtClassifiers");apply -cp "/home/abbass/.IdeaIC2019.1/config/plugins/Scala/repo/org.jetbrains/sbt-structure-extractor/scala_2.12/sbt_1.0/2018.2.1+4-88400d3f/jars/sbt-structure-extractor.jar" org.jetbrains.sbt.CreateTasks;*/*:dumpStructure
clean
compile
reload
compile
;set _root_.scala.collection.Seq(historyPath := None,shellPrompt := { _ => "" },SettingKey[_root_.scala.Option[_root_.sbt.File]]("sbtStructureOutputFile") in _root_.sbt.Global := _root_.scala.Some(_root_.sbt.file("/tmp/sbt-structure.xml")),SettingKey[_root_.java.lang.String]("sbtStructureOptions") in _root_.sbt.Global := "download, resolveClassifiers");apply -cp "/home/abbass/.IdeaIC2019.2/config/plugins/Scala/repo/org.jetbrains/sbt-structure-extractor/scala_2.12/sbt_1.0/2018.2.1+4-88400d3f/jars/sbt-structure-extractor.jar" org.jetbrains.sbt.CreateTasks;*/*:dumpStructure
clean
compile
reload
clean
compile
clean
compile
package
clean
compile
clean
compile
reload
compile
reload
compile
